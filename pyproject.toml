[build-system]
requires = ["setuptools>=61.2", "versioneer[toml]"]
build-backend = "setuptools.build_meta"

[project]
name = "fmriprep"
authors = [{name = "The NiPreps Developers", email = "nipreps@gmail.com"}]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
description = "fMRIPrep is a robust and easy-to-use pipeline for preprocessing of diverse fMRI data."
license = {text = "Apache License, Version 2.0"}
requires-python = ">=3.8"
dependencies = [
    'importlib_resources; python_version < "3.9"',
    "looseversion",
    "nibabel >= 4.0.1",
    "nipype >= 1.8.5",
    "nitime",
    "nitransforms >= 21.0.0",
    "niworkflows ~= 1.7.0",
    "numpy",
    "packaging",
    "pandas",
    "psutil >= 5.4",
    "pybids >= 0.15.0",
    "requests",
    "sdcflows ~= 2.2.2",
    "smriprep ~= 0.10.0",
    "tedana ~= 0.0.9",
    "templateflow >= 0.6",
    "toml",
    "codecarbon",
    "APScheduler",
]
dynamic = ["version"]

[project.readme]
file = "long_description.rst"
content-type = "text/x-rst; charset=UTF-8"

[project.urls]
Homepage = "https://github.com/nipreps/fmriprep"
Documentation = "https://fmriprep.org"
Paper = "https://doi.org/10.1038/s41592-018-0235-4"
"Docker Images" = "https://hub.docker.com/r/nipreps/fmriprep/tags/"
NiPreps = "https://www.nipreps.org/"

[project.optional-dependencies]
doc = [
    "pydot >= 1.2.3",
    "sphinx >= 1.8",
    "sphinx-argparse",
    "sphinx_rtd_theme",
]
dev = [
    "black ~= 22.3.0",
    "pre-commit",
    "isort ~= 5.10.1",
    "flake8-pyproject",
]
duecredit = ["duecredit"]
resmon = []
telemetry = [
    "migas >= 0.3.0",
    "sentry-sdk ~= 1.3.0",
]
test = [
    "coverage",
    "codecov",
    "pytest",
    "pytest-cov",
    "pytest-env",
]
maint = [
    "fuzzywuzzy",
    "python-Levenshtein",
]
# Aliases
docs = ["fmriprep[doc]"]
tests = ["fmriprep[test]"]
all = ["fmriprep[doc,maint,telemetry,test]"]

[project.scripts]
fmriprep = "fmriprep.cli.run:main"

[tool.setuptools]
include-package-data = false

[tool.setuptools.packages]
find = {namespaces = false}

[tool.setuptools.exclude-package-data]
"*" = ["tests"]

[tool.setuptools.package-data]
fmriprep = [
    "data/*.json",
    "data/*.nii.gz",
    "data/*.mat",
    "data/NOTICE",
    "data/boilerplate.bib",
    "data/itkIdentityTransform.txt",
    "data/flirtsch/bbr.sch",
    "data/reports-spec.yml",
    "data/tests/config.toml",
    "data/tests/ds000005/*",
    "data/tests/ds000005/sub-01/anat/*",
    "data/tests/ds000005/sub-01/func/*",
    "interfaces/tests/data/*",
    "VERSION",
]

[tool.versioneer]
VCS = "git"
style = "pep440"
versionfile_source = "fmriprep/_version.py"
versionfile_build = "fmriprep/_version.py"
tag_prefix = ""
parentdir_prefix = ""

[tool.black]
line-length = 99
target-version = ['py39']
skip-string-normalization = true
extend-exclude = '_version.py|versioneer.py'

[tool.isort]
profile = 'black'
extend_skip = '_version.py'

[tool.flake8]
max-line-length = "99"
doctests = "False"
exclude = "*build/"
ignore = ["W503", "E203"]
per-file-ignores = [
    "**/__init__.py : F401",
    "docs/conf.py : E265",
]

[tool.pytest.ini_options]
norecursedirs = [".git"]
addopts = "-svx --doctest-modules"
doctest_optionflags = "ALLOW_UNICODE NORMALIZE_WHITESPACE ELLIPSIS"
env = "PYTHONHASHSEED=0"
filterwarnings = ["ignore::DeprecationWarning"]
junit_family = "xunit2"
